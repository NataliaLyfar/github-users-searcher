{"version":3,"file":"static/js/391.3011e5dc.chunk.js","mappings":"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","sources":["components/FavoriteList/index.jsx","redux/githubUsers/searcherSelector.js","components/SearchBar/SearchBar.jsx","components/UsersList/UsersList.jsx","pages/index.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { Table, Row, Col, Typography, Image, Popconfirm, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst { Title } = Typography;\n\nexport const FavoriteList = () => {\n  const [storageItem, setStorageItem] = useState(() =>\n    JSON.parse(localStorage.getItem('favorites') || '[]')\n  );\n\n  const favoriteColumns = [\n    {\n      title: 'avatar',\n      dataIndex: 'avatar',\n      key: 'avatar',\n      render: avatar => <Image src={avatar} alt=\"user avatar\" width={44} />,\n    },\n    {\n      title: 'User',\n      dataIndex: 'userLogin',\n      key: 'userLogin',\n      render: text => (\n        <Link to={`/users/${text}`}>\n          <Typography.Text copyable>{text}</Typography.Text>\n        </Link>\n      ),\n      sorter: (a, b) => a.login.length - b.login.length,\n    },\n    {\n      title: 'Repo url',\n      dataIndex: 'reposUrl',\n      key: 'reposUrl',\n      responsive: ['md'],\n      render: url => (\n        <Typography.Link href={url} target=\"_blank\" rel=\"noreferrer\">\n          {url}\n        </Typography.Link>\n      ),\n    },\n    {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (_, record) =>\n        storageItem.length >= 1 ? (\n          <Popconfirm\n            title=\"Sure to delete?\"\n            onConfirm={() => handleDelete(record.userLogin)}\n          >\n            <Button type=\"link\">Delete</Button>\n          </Popconfirm>\n        ) : null,\n    },\n  ];\n\n  const handleDelete = login => {\n    const newData = storageItem.filter(item => item.userLogin !== login);\n    setStorageItem(newData);\n    localStorage.setItem('favorites', JSON.stringify(newData));\n  };\n\n  return (\n    <>\n      {storageItem.length > 0 && (\n        <List>\n          <Title level={2}>Favorite Github users</Title>\n          <Row>\n            <Col xs={24}>\n              <Table\n                dataSource={storageItem?.map(item => ({\n                  ...item,\n                  key: item.userLogin,\n                }))}\n                columns={favoriteColumns}\n                pagination={{\n                  defaultPageSize: '10',\n                  showSizeChanger: true,\n                  pageSizeOptions: [5, 10, 15, 30],\n                  position: ['topLeft', 'bottomRight'],\n                }}\n              />\n            </Col>\n          </Row>\n        </List>\n      )}\n    </>\n  );\n};\n\nconst List = styled.div`\n  margin-top: ${p => p.theme.space[5]}px;\n`;\n","export const getSearch = state => state.search.value;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getSearch } from 'redux/githubUsers/searcherSelector';\nimport { changeSearch } from 'redux/githubUsers/searchSlice';\nimport styled from 'styled-components';\nimport { DebounceInput } from 'react-debounce-input';\n\nexport const SearchBar = () => {\n  const query = useSelector(getSearch);\n  const dispatch = useDispatch();\n\n  return (\n    <StyledInput\n      minLength={2}\n      debounceTimeout={300}\n      name=\"search\"\n      value={query}\n      onChange={e => dispatch(changeSearch(e.target.value.trim()))}\n      placeholder=\"input to search Github users\"\n    />\n  );\n};\n\nconst StyledInput = styled(DebounceInput)`\n  width: 338px;\n  border-radius: ${p => p.theme.radii.normal};\n  margin-bottom: ${p => p.theme.space[3]}px;\n  outline: none;\n  font-feature-settings: 'tnum', 'tnum';\n  background-color: ${p => p.theme.colors.white};\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.shade};\n  color: ${p => p.theme.colors.primary};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-variant: tabular-nums;\n  line-height: ${p => p.theme.lineHeights.body};\n  padding: ${p => p.theme.space[0]}px ${p => p.theme.space[2]}px;\n  transition: all 0.3s;\n  &:hover,\n  &:focus,\n  &:active {\n    border-color: ${p => p.theme.colors.hover};\n    border-right-width: 1px;\n    box-shadow: 0 0 0 2px rgb(24 144 255 / 20%);\n    outline: 0;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSearchGithubUsersQuery } from 'redux/githubUsers/githubUsersApi';\nimport { getSearch } from 'redux/githubUsers/searcherSelector';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Table, Row, Col, Empty, Button, Space, Typography, Image } from 'antd';\nimport { CaretLeftFilled, CaretRightFilled } from '@ant-design/icons';\nimport { Spinner, Box } from 'components/ui';\nimport styled from 'styled-components';\n\nexport const UsersList = () => {\n  const [skip, setSkip] = useState(true);\n  const query = useSelector(getSearch);\n  const [page, setPage] = useState(1);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query.length > 0) setSkip(false);\n  }, [query]);\n\n  const { isLoading, isFetching, error, partialUsers, totalPages } =\n    useSearchGithubUsersQuery(`q=${query}&page=${page}`, {\n      skip,\n      selectFromResult: ({ data, isLoading, isFetching, isError }) => ({\n        partialUsers: data?.partialUsers,\n        totalPages: data?.totalPages,\n        isLoading: isLoading,\n        isFetching: isFetching,\n        error: isError,\n      }),\n    });\n\n  const columns = [\n    {\n      title: 'avatar',\n      dataIndex: 'avatar_url',\n      key: 'avatar_url',\n      render: avatar_url => (\n        <Image src={avatar_url} alt=\"user avatar\" width={44} />\n      ),\n    },\n    {\n      title: 'User',\n      dataIndex: 'login',\n      key: 'login',\n      render: text => (\n        <Link to={`/users/${text}`} state={{ from: location }}>\n          <Typography.Text copyable>{text}</Typography.Text>\n        </Link>\n      ),\n      sorter: (a, b) => a.login.length - b.login.length,\n    },\n    {\n      title: 'Type',\n      dataIndex: 'type',\n      key: 'type',\n      filters: [\n        {\n          text: 'User',\n          value: 'User',\n        },\n        {\n          text: 'Organization',\n          value: 'Organization',\n        },\n      ],\n      onFilter: (value, item) => item.type.includes(value),\n      responsive: ['md'],\n    },\n    {\n      title: 'Repo url',\n      dataIndex: 'html_url',\n      key: 'html_url',\n      responsive: ['md'],\n      render: url => (\n        <Typography.Link href={url} target=\"_blank\" rel=\"noreferrer\">\n          {url}\n        </Typography.Link>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      {isLoading || isFetching ? (\n        <Box>\n          <Spinner />\n        </Box>\n      ) : partialUsers?.length > 0 ? (\n        <>\n          <Row>\n            <Col xs={24}>\n              <StyledTable\n                dataSource={partialUsers?.map(item => ({\n                  ...item,\n                  key: item.id,\n                }))}\n                columns={columns}\n            \n                pagination={{\n                  defaultPageSize: '10',\n                  showSizeChanger: true,\n                  pageSizeOptions: [5, 10, 15, 30],\n                  position: ['topLeft', 'bottomRight'],\n                }}\n              />\n            </Col>\n          </Row>\n          {partialUsers?.length > 10 && (\n            <Space>\n              <Button\n                onClick={() => setPage(page => page - 1)}\n                disabled={page === 1}\n                icon={<CaretLeftFilled />}\n              />\n              <Button\n                onClick={() => setPage(page => page + 1)}\n                disabled={page === totalPages}\n                icon={<CaretRightFilled />}\n              />\n            </Space>\n          )}\n        </>\n      ) : (query.length > 0 && partialUsers?.length === 0) || error ? (\n        <Empty />\n      ) : null}\n    </>\n  );\n};\n\nconst StyledTable = styled(Table)`\n  .ant-table {\n    border-radius: 30px;\n  }\n  .ant-table .ant-table-container {\n    border-radius: 30px;\n  }\n  .ant-table table{\n    border-radius: 30px;\n  }\n  thead.ant-table-thead  tr th{\n  background: lightsalmon;\n\n  }\n  .ant-table-container, .ant-table-container table>thead>tr:first-child th:first-child {\n    border-radius: 30px 0 0 30px;\n}\n.ant-table-container, .ant-table-container table>thead>tr:first-child th:last-child {\n    border-radius: 0 30px 30px 0;\n}\n  `","import { FavoriteList } from 'components/FavoriteList';\nimport { SearchBar } from 'components/SearchBar';\nimport { UsersList } from 'components/UsersList';\n\nconst HomePage = () => {\n  return (\n    <>\n      <SearchBar />\n      <UsersList />\n      <FavoriteList />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["Title","Typography","FavoriteList","useState","JSON","parse","localStorage","getItem","storageItem","setStorageItem","favoriteColumns","title","dataIndex","key","render","avatar","src","alt","width","text","to","copyable","sorter","a","b","login","length","responsive","url","href","target","rel","_","record","onConfirm","handleDelete","userLogin","type","newData","filter","item","setItem","stringify","List","level","xs","dataSource","map","columns","pagination","defaultPageSize","showSizeChanger","pageSizeOptions","position","styled","p","theme","space","getSearch","state","search","value","SearchBar","query","useSelector","dispatch","useDispatch","StyledInput","minLength","debounceTimeout","name","onChange","e","changeSearch","trim","placeholder","DebounceInput","radii","normal","colors","white","borders","shade","primary","fontSizes","s","lineHeights","body","hover","UsersList","skip","setSkip","page","setPage","location","useLocation","useEffect","useSearchGithubUsersQuery","selectFromResult","data","isLoading","isFetching","isError","partialUsers","totalPages","error","avatar_url","from","filters","onFilter","includes","StyledTable","id","onClick","disabled","icon","CaretLeftFilled","CaretRightFilled","Table"],"sourceRoot":""}
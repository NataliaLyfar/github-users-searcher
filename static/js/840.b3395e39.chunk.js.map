{"version":3,"file":"static/js/840.b3395e39.chunk.js","mappings":"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","sources":["components/UserCard/index.jsx","pages/UserPage/index.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useGetUserQuery } from 'redux/githubUsers/githubUsersApi';\nimport { Card, Typography } from 'antd';\nimport { HeartOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\n\nconst { Title, Text, Paragraph, Link } = Typography;\n\nexport const UserCard = () => {\n  const { login } = useParams();\n  const [storageItem, setStorageItem] = useState(() =>\n    JSON.parse(localStorage.getItem('favorites') || '[]')\n  );\n\n  const {\n    userLogin,\n    name,\n    followers,\n    following,\n    avatar,\n    publicRepos,\n    reposUrl,\n  } = useGetUserQuery(login, {\n    selectFromResult: ({ data }) => ({\n      userLogin: data?.login,\n      followers: data?.followers,\n      following: data?.following,\n      name: data?.name,\n      publicRepos: data?.public_repos,\n      avatar: data?.avatar_url,\n      reposUrl: data?.html_url,\n    }),\n  });\n\n  const isFavorited = storageItem\n    .map(user => user.userLogin)\n    .includes(userLogin);\n\n  const handleToggleFavorite = () => {\n    if (!isFavorited) {\n      const newStorageItem = [\n        ...storageItem,\n        { avatar, userLogin, reposUrl, isFavorited },\n      ];\n      setStorageItem(newStorageItem);\n      localStorage.setItem('favorites', JSON.stringify(newStorageItem));\n    } else {\n      const newStorageItem = storageItem.filter(\n        ({ savedLogin }) => savedLogin !== userLogin\n      );\n      setStorageItem(newStorageItem);\n      localStorage.setItem('favorites', JSON.stringify(newStorageItem));\n    }\n  };\n\n  return (\n    <Card style={{ width: 320 }} cover={<img src={avatar} alt=\"user avatar\" />}>\n      <StyledButton\n        isFavorited={isFavorited}\n        type=\"button\"\n        onClick={handleToggleFavorite}\n      >\n        <HeartOutlined />\n      </StyledButton>\n      {name && <Title level={3}>{name}</Title>}\n      <Paragraph>\n        <Text strong>Login:</Text> {userLogin}\n      </Paragraph>\n      <Paragraph>\n        <Text strong>Followers:</Text> {followers}\n      </Paragraph>\n      <Paragraph>\n        <Text strong>Following:</Text> {following}\n      </Paragraph>\n      <Paragraph>\n        <Text strong>Public repos:</Text> {publicRepos}\n      </Paragraph>\n      <Link href={reposUrl} target=\"_blank\" rel=\"noreferrer\">\n        {reposUrl}\n      </Link>\n    </Card>\n  );\n};\n\nconst StyledButton = styled.button`\n  position: absolute;\n  right: 20px;\n  bottom: 39%;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  &:hover,\n  &:focus,\n  &:active {\n    svg {\n      color: ${p => p.theme.colors.accent};\n    }\n    background-color: transparent;\n    cursor: pointer;\n  }\n  color: ${p => (p.isFavorited ? p.theme.colors.accent : p.theme.colors.black)};\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { UserCard } from 'components/UserCard';\nimport { Box } from 'components/ui';\nimport styled from 'styled-components';\n\nconst UserPage = () => {\n  const [backLocation, setBackLocation] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (backLocation === null) {\n      setBackLocation(location?.state?.from ?? '/');\n    }\n  }, [backLocation, location?.state?.from]);\n\n  const onGoBack = () => {\n    navigate(backLocation);\n  };\n\n  return (\n    <Container>\n      <StyledButton onClick={onGoBack} icon={<ArrowLeftOutlined />} />\n      <UserCard />\n    </Container>\n  );\n};\n\nexport default UserPage;\n\nconst StyledButton = styled(Button)`\n  margin-bottom: ${p => p.theme.space[1]}px;\n  margin-right: auto;\n`;\nconst Container = styled(Box)`\n  flex-direction: column;\n  margin: ${p => p.theme.space[3]}px auto;\n`;\n"],"names":["Title","Typography","Text","Paragraph","Link","UserCard","login","useParams","useState","JSON","parse","localStorage","getItem","storageItem","setStorageItem","useGetUserQuery","selectFromResult","data","userLogin","followers","following","name","publicRepos","public_repos","avatar","avatar_url","reposUrl","html_url","isFavorited","map","user","includes","style","width","cover","src","alt","StyledButton","type","onClick","newStorageItem","filter","savedLogin","setItem","stringify","HeartOutlined","level","strong","href","target","rel","styled","p","theme","colors","accent","black","backLocation","setBackLocation","location","useLocation","navigate","useNavigate","useEffect","state","from","Container","icon","ArrowLeftOutlined","Button","space","Box"],"sourceRoot":""}